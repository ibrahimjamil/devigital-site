(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{321:function(e,t,i){"use strict";var a=i(7),s=i(35),n=i(17),l=i(320),r=i.n(l);t.a=function e(t,i,l){var c=this,u=i.readViews,h=i.preloadViews,o=i.getListByKey,d=t.label,b=t.path,p=t.type,f=t.access,y=t.isOrderable,g=t.isPrimaryKey,O=t.isRequired,j=t.isReadOnly,w=t.adminDoc,V=t.defaultValue,v=Object(a.a)(t,["label","path","type","access","isOrderable","isPrimaryKey","isRequired","isReadOnly","adminDoc","defaultValue"]);Object(s.a)(this,e),Object(n.a)(this,"getQueryFragment",(function(){return c.path})),Object(n.a)(this,"serialize",(function(e){return e[c.path]||null})),Object(n.a)(this,"validateInput",(function(){})),Object(n.a)(this,"deserialize",(function(e){return e[c.path]})),Object(n.a)(this,"hasChanged",(function(e,t){return!r()(e[c.path],t[c.path])})),Object(n.a)(this,"getDefaultValue",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.originalInput,i=void 0===t?{}:t,a=e.prefill,s=void 0===a?{}:a;return c._getDefaultValue({originalInput:i,prefill:s})})),Object(n.a)(this,"initCellView",(function(){var e=c.views.Cell;e&&c.readViews([e])})),Object(n.a)(this,"initFieldView",(function(){var e=c.views.Field;e&&c.readViews([e])})),Object(n.a)(this,"initFilterView",(function(){var e=c.views.Filter;e&&c.readViews([e])})),Object(n.a)(this,"getFilterTypes",(function(){return[]})),Object(n.a)(this,"getFilterValue",(function(e){return e})),this.config=v,this.label=d,this.path=b,this.type=p,this.maybeAccess=f,this.isOrderable=y,this.isPrimaryKey=g,this.isRequired=O,this.isReadOnly=j,this.adminDoc=w,this.readViews=u,this.preloadViews=h,this.getListByKey=o,this.views=l,this._getDefaultValue="function"!=typeof V?function(e){return e.prefill[c.path]||V}:V}},344:function(e,t,i){"use strict";i.r(t);var a=i(6),s=i(17),n=i(321);i(166),i(233),i(320);class l extends n.a{constructor(e,...t){const{defaultValue:i=(e.many?[]:null)}=e;super(Object(a.a)(Object(a.a)({},e),{},{defaultValue:i}),...t),Object(s.a)(this,"getQueryFragment",(e=this.path)=>`\n      ${e} {\n        id\n        _label_\n      }\n    `),Object(s.a)(this,"getFilterGraphQL",({type:e,value:t})=>"contains"===e?{[this.path+"_some"]:{id:t}}:"is"===e?{[""+this.path]:{id:t}}:void 0),Object(s.a)(this,"getFilterLabel",({label:e})=>`${this.label} ${e.toLowerCase()}`),Object(s.a)(this,"formatFilter",({label:e,value:t})=>`${this.getFilterLabel({label:e})}: "${t}"`),Object(s.a)(this,"serialize",e=>{const{path:t}=this,{many:i}=this.config;let a=e[t];if(i){let e=[];return Array.isArray(a)&&(e=a.map(e=>e.id)),{disconnectAll:!0,connect:e.map(e=>({id:e}))}}return a?{connect:{id:a.id}}:{disconnectAll:!0}}),Object(s.a)(this,"getFilterTypes",()=>{const{many:e}=this.config;return e?[{type:"contains",label:"Contains",getInitialValue:()=>null}]:[{type:"is",label:"Is",getInitialValue:()=>null}]})}getRefList(){return this.getListByKey(this.config.ref)}}t.default=l}}]);